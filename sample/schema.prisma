generator client {
  provider = "prisma-client-js"
  output = "./node_modules/@prisma"
}

datasource db {
  provider = "mysql" // You can switch to mysql or sqlite as needed
  url      = env("DB_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  name      String?
  profile   Profile?
  posts     Post[]
  comments  Comment[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Profile {
  id       Int     @id @default(autoincrement())
  bio      String?
  age      DateTime
  isActive Boolean @default(true)
  userId   Int     @unique
  user     User    @relation(fields: [userId], references: [id])
}

model Post {
  id         Int       @id @default(autoincrement())
  title      String
  content    String?
  published  Boolean   @default(false)
  authorId   Int
  author     User      @relation(fields: [authorId], references: [id])
  tags       Tag[]     @relation("PostTags")
  comments   Comment[]
  categoryId Int?
  category   Category? @relation(fields: [categoryId], references: [id])
  createdAt  DateTime  @default(now())
}

model Tag {
  id    Int    @id @default(autoincrement())
  name  String @unique
  posts Post[] @relation("PostTags")
}

model Comment {
  id        Int      @id @default(autoincrement())
  content   String
  postId    Int
  post      Post     @relation(fields: [postId], references: [id])
  userId    Int?
  user      User?    @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
}

model Category {
  id        Int         @id @default(autoincrement())
  name      String      @unique
  posts     Post[]
  Analytics Analytics[]
}

model Analytics {
  id         Int       @id @default(autoincrement())
  metric     String
  value      Float
  recordedAt DateTime  @default(now())
  source     String?
  categoryId Int?
  category   Category? @relation(fields: [categoryId], references: [id])
}
