name: ai-board
services:
  nginx:
    build:
      context: ./nginx
      dockerfile: ./Dockerfile 
    depends_on:
      - ui
    ports:
      - "80:80"
      - "443:443"
    restart: always
    networks:
      - ui
  db:
    image: postgres:latest
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "password"
      POSTGRES_DB: "postgres"
    expose:
      - 5432
    volumes:
      - data:/var/lib/postgresql/data
    networks:
      - db
  ui:
    build:
      context: ./
      dockerfile: ./ui/Dockerfile
    ports: 
      - 3000:3000
    depends_on:
      - api
      - db
    environment:
        AUTH_TRUST_HOST: true
        AUTH_URL: "https://localhost/api/auth"
        NEXT_PUBLIC_URL: "https://localhost"
        DATABASE_URL: "postgresql://postgres:password@db:5432/postgres"
        PV_KEY: ""
        AUTH_SECRET: ""
       # AUTH_[provider]_ID: "" optional for 0auth login
       # AUTH_[provider]_SECRET: ""
       # SMTP_HOST: "" optional for magic link login
       # SMTP_EMAIL: ""
       # SMTP_PASSWORD: ""
       # SMTP_PORT: ""
       # SMTP_CLIENT_ID: ""
       # SMTP_SECRET: ""
       # SMTP_REFRESH: ""
       # SMTP_ACCESS: ""
    networks:
      - ui
      - db
      - ollama # if you plan to use a docker deployed ollama ensure to connect to the same network
  api:
    build:
      context: ./
      dockerfile: ./api/Dockerfile
    ports: 
      - 3001:3001
    depends_on:
      - db
    environment:
        AUTH_TRUST_HOST: true
        DATABASE_URL: "postgresql://postgres:password@db:5432/postgres"
        PV_KEY: ""
        AUTH_SECRET: ""
    networks:
      - db
      - ollama
volumes:
  data:
    name: data
networks:
  ui: 
    name: ui
  db:
    name: db
  ollama:
    external: true # connect the external ollama network 